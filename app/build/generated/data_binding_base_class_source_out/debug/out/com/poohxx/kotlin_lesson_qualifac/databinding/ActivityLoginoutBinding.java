// Generated by view binder compiler. Do not edit!
package com.poohxx.kotlin_lesson_qualifac.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.poohxx.kotlin_lesson_qualifac.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button avatarSelectBtn;

  @NonNull
  public final Button button2;

  @NonNull
  public final EditText edLogin;

  @NonNull
  public final EditText edName;

  @NonNull
  public final EditText edName2;

  @NonNull
  public final EditText edName3;

  @NonNull
  public final EditText edPassword;

  @NonNull
  public final ImageView imAvatar;

  private ActivityLoginoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button avatarSelectBtn, @NonNull Button button2, @NonNull EditText edLogin,
      @NonNull EditText edName, @NonNull EditText edName2, @NonNull EditText edName3,
      @NonNull EditText edPassword, @NonNull ImageView imAvatar) {
    this.rootView = rootView;
    this.avatarSelectBtn = avatarSelectBtn;
    this.button2 = button2;
    this.edLogin = edLogin;
    this.edName = edName;
    this.edName2 = edName2;
    this.edName3 = edName3;
    this.edPassword = edPassword;
    this.imAvatar = imAvatar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_loginout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.avatarSelectBtn;
      Button avatarSelectBtn = ViewBindings.findChildViewById(rootView, id);
      if (avatarSelectBtn == null) {
        break missingId;
      }

      id = R.id.button2;
      Button button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.edLogin;
      EditText edLogin = ViewBindings.findChildViewById(rootView, id);
      if (edLogin == null) {
        break missingId;
      }

      id = R.id.edName;
      EditText edName = ViewBindings.findChildViewById(rootView, id);
      if (edName == null) {
        break missingId;
      }

      id = R.id.edName2;
      EditText edName2 = ViewBindings.findChildViewById(rootView, id);
      if (edName2 == null) {
        break missingId;
      }

      id = R.id.edName3;
      EditText edName3 = ViewBindings.findChildViewById(rootView, id);
      if (edName3 == null) {
        break missingId;
      }

      id = R.id.edPassword;
      EditText edPassword = ViewBindings.findChildViewById(rootView, id);
      if (edPassword == null) {
        break missingId;
      }

      id = R.id.imAvatar;
      ImageView imAvatar = ViewBindings.findChildViewById(rootView, id);
      if (imAvatar == null) {
        break missingId;
      }

      return new ActivityLoginoutBinding((ConstraintLayout) rootView, avatarSelectBtn, button2,
          edLogin, edName, edName2, edName3, edPassword, imAvatar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
